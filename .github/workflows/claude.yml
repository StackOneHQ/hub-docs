name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build CLAUDE.md
        run: |
          npx -y cursor-rules-to-claude

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          mcp_config: |
            {
              "mcpServers": {
                  "context7": {
                      "command": "npx",
                      "args": ["-y", "@upstash/context7-mcp"]
                  },
                  "stackchat": {
                    "command": "npx",
                    "args": [
                      "-y",
                      "mcp-remote@latest",
                      "https://stackchat-mcp.stackonehq.workers.dev/mcp/sse",
                      "--header",
                      "Authorization: Bearer ${{ secrets.MCP_STACKCHAT_TOKEN }}"
                    ]
                  }
              }
            }
          allowed_tools: "Bash,mcp__context7__resolve-library-id,mcp__context7__get-library-docs,mcp__stackchat__*"
          custom_instructions: |
            "This repository contains the StackOne Hub Documentation site built with Mintlify, which provides comprehensive integration guides and authentication documentation for all connectors provided by StackOne to its customers' customers. The site serves as a central hub for users to learn how to configure and authenticate their third-party integrations across multiple categories: ATS (Applicant Tracking Systems), CRM, HRIS, Marketing, IAM (Identity and Access Management), LMS (Learning Management Systems), Documents, and Screening platforms and more. Each integration page contains specific authentication methods, configuration steps, and implementation guides for connecting various SaaS tools to StackOne's unified API. The documentation structure follows Mintlify conventions with navigation defined in mint.json and content in .mdx files. Integration-specific guides include OAuth flows, API key setups, webhook configurations, and troubleshooting steps. When working on this repository, focus on maintaining consistency across integration guides, ensuring accurate authentication steps, updating API references, and improving developer experience for StackOne's integration platform users."
